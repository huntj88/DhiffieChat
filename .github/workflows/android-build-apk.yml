name: Android build apk for environment

on:
  workflow_dispatch:
    inputs:
      dhiffieEnv:
        description: 'Name of the environment'
        required: true
      branch:
        description: 'Branch to make a build from'
        required: true

jobs:
  bump_version:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Android
    outputs:
      release_tag: ${{ steps.bump.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: '0'

      - name: Set Version Tag
        run: echo "VERSION_TAG=$(./appVersion.sh ${{ github.event.inputs.dhiffieEnv }})" >> $GITHUB_ENV

      - name: Display Version
        run: echo $VERSION_TAG

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/Android/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/Android/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Build and Test
        run: ./gradlew test

      - name: Bump version and push tag
        id: bump
        uses: anothrNick/github-tag-action@1.34.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_TAG: ${{ env.VERSION_TAG }}
          RELEASE_BRANCHES: ${{ github.event.inputs.branch }}

  build_debug_apk:
    if: github.event.inputs.dhiffieEnv != 'prod'
    needs: bump_version
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Android
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: '0'

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/Android/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/Android/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Generate Debug APK
        run: ./gradlew assembleDebug

      - name: Prepare for apk upload
        run: |
          mkdir debugArtifact
          mv app/build/outputs/apk/debug/app-debug.apk "debugArtifact/app-${{ github.event.inputs.dhiffieEnv }}.apk"

      - uses: actions/upload-artifact@v2
        with:
          name: "debug-${{ github.event.inputs.dhiffieEnv }}-apk"
          path: Android/debugArtifact

  build_release_apk:
    if: github.event.inputs.dhiffieEnv == 'prod'
    needs: bump_version
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Android
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: '0'

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/Android/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/Android/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Generate Release APK
        run: ./gradlew assembleRelease

      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        with:
          releaseDirectory: Android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.RELEASE_JKS_FILE }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "30.0.2"

      - name: Prepare for apk upload
        run: |
          mkdir releaseArtifact
          mv app/build/outputs/apk/release/app-release-unsigned-signed.apk releaseArtifact/app-release-signed.apk
#          have not enabled proguard yet
#          cp app/build/outputs/mapping/release/mapping.txt releaseArtifact

      - uses: actions/upload-artifact@v2
        with:
          name: release-apk
          path: Android/releaseArtifact

  create_github_release:
    if: github.ref == 'refs/heads/master'
    needs: [bump_version, build_release_apk]
    runs-on: ubuntu-latest
    steps:
      - run: mkdir githubOutput

      - uses: actions/download-artifact@v2
        with:
          name: release-apk
          path: githubOutput

      - run: ls githubOutput

      - name: Upload to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: githubOutput/*
          tag: ${{ needs.bump_version.outputs.release_tag }}
          file_glob: true
